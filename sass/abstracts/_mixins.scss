// Abstracts : Mixins - ===================================================== -

// 'font-face' generator
// Creates a new '@font-face' declaration

// The '$file' variable assumes the font filename contains the fontweight both
// numerically and as a string. For example, a font weight of 400 should have a
// filename of '400-normal'.

// See the following link for all the commonly-used names for each weight:
// https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#common_weight_name_mapping

@mixin font-face($url: '/', $weight-num: 400, $weight-name: 'normal', $family: 'null', $style: normal) {
  $file: $url + $weight-num + '-' + $weight-name;

  @font-face {
    font-family: $family;
    src:
      url('#{$file}.woff2') format('woff2');
    font-style: #{$style};
    font-weight: $weight-num;
    font-display: fallback;
  }
}


// Styles on focus
// Appends styles that are applied when an element is focused. Renders a
// transparent, outlined rectangle behind target element; the size is
// adjustable.

@mixin focus-effect($width: -0.8rem, $height: -0.4rem) {
	/* 'before' pseudo */
	&::before {
		/* transition */
		transition:
			outline-color 0.1s,
			background-color 0.1s
		;
		content: '';
		position: absolute;
		z-index: -1;
		inset: $width $height;
		outline: transparent solid 2px;
	}

	/* 'focus' state > 'before' pseudo */
	&:focus::before {
		outline-color: rgba( map.get($colors-primary, 'tone-3'), 0.5 );
		background-color: rgba( map.get($colors-primary, 'tone-4'), 0.2);
	}
}